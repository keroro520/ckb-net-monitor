[logger]
filter = "info,ckb-metrics=trace"
color = false
log_to_file = true
log_to_stdout = true

[network]
listen_addresses = ["/ip4/0.0.0.0/tcp/8115"]
### Specify the public and routable network addresses
# public_addresses = []

# Node connects to nodes listed here to discovery other peers when there's no local stored peers.
# When chain.spec is changed, this usually should also be changed to the bootnodes in the new chain.
bootnodes = [
  # Hangzhou
  "/ip4/47.110.15.57/tcp/8114/p2p/QmXS4Kbc9HEeykHUTJCm2tNmqghbvWyYpUp6BtE5b6VrAU",
  # Tokyo
  "/ip4/47.245.31.79/tcp/8114/p2p/QmUaSuEdXNGJEKvkE4rCn3cwBrpRFUm5TsouF4M3Sjursv",
  # Bombay
  "/ip4/13.234.144.148/tcp/8114/p2p/QmbT7QimcrcD5k2znoJiWpxoESxang6z1Gy9wof1rT1LKR",
  # Virginia
  "/ip4/3.218.170.86/tcp/8114/p2p/QmShw2vtVt49wJagc1zGQXGS6LkQTcHxnEV3xs6y8MAmQN",
  # Frankfurt
  "/ip4/52.59.155.249/tcp/8114/p2p/QmRHqhSGMGm5FtnkW8D6T83X7YwaiMAZXCXJJaKzQEo3rb",
  # Beijing
  "/ip4/39.107.100.85/tcp/8114/p2p/QmeQwD2GGuZyFzDPbQEKFJUjmNaY9FG3X7WHPL823zFD3a",
  # Shanghai
  "/ip4/47.103.44.208/tcp/8114/p2p/QmWVt9kNFv8XM1CMqeJj2nmG4tJ4ViqgwzJMr7yYynp6qd",
  # Shenzhen
  "/ip4/120.24.85.239/tcp/8114/p2p/QmaJP1sDiWZuwAEMghNHt7TrTgaMCyYaEMMYLc4YvoUGSV",
  # Hong Kong
  "/ip4/47.91.238.128/tcp/8114/p2p/QmTjLAewCM6SivjpW7BJfSj1ABuPA7x6FsFu5ga7Xy2xig",
  # Jakarta
  "/ip4/147.139.137.53/tcp/8114/p2p/QmQBLw9TqkS8yu2Kg8UtiYzvxEQ7DfKiXLx8iD7bF8XRyj",
  # California
  "/ip4/13.52.18.181/tcp/8114/p2p/QmcEK1wUR287qSYdw8eHNWeQrFitQsCaZHHTM9wgvakxnS",
  # Singapore
  "/ip4/18.140.240.153/tcp/8114/p2p/QmVi7reKhqVnoBYzW2nJYnrujVeckrZXhwuYbX7P2whPJg",
  # Canada
  "/ip4/35.183.172.68/tcp/8114/p2p/QmNRAvtC6L85hwp6vWnqaKonJw3dz1q39B4nXVQErzC4Hx",
  # London
  "/ip4/3.10.216.39/tcp/8114/p2p/QmagxSv7GNwKXQE7mi1iDjFHghjUpbqjBgqSot7PmMJqHA",
  # Sydney
  "/ip4/3.105.209.193/tcp/8114/p2p/QmQidJaxciY3NT2PjsaCR4Gz8vB8kFn3Avwz96u6b3jGc1",
  # Sao Paulo
  "/ip4/18.229.214.173/tcp/8114/p2p/QmVeeCh81GTLGRwB7vRHXeTRdUHRYcfn6qKEfewhtiRJZC",
]

### Whitelist-only mode
# whitelist_only = false
### Whitelist peers connecting from the given IP addresses
# whitelist_peers = []

max_peers = 5000
max_outbound_peers = 2500
# 2 minutes
ping_interval_secs = 120
# 20 minutes
ping_timeout_secs = 1200
connect_outbound_interval_secs = 15
# If set to true, try to register upnp
upnp = false
# If set to true, network service will add discovered local address to peer store, it's helpful for private net development
discovery_local_address = false
# If set to true, random cleanup when there are too many inbound nodes
# Ensure that itself can continue to serve as a bootnode node
bootnode_mode = false
